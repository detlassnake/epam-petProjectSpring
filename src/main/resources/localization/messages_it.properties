label.lang.en =INGLESE
label.lang.gr = TEDESCO
label.lang.it = ITALIA
message.title = PetProjecte
message.description = Questa applicazione implementa CRUD e REST, consente di comunicare con il database tramite richieste POST e fornisce interfacce CRUD. L'applicazione ha le seguenti entita: Abilita, Account, Sviluppatore. Strati: modello - classi POJO; view - tutti i dati richiesti per l'interazione utente / console; controller - gestione delle richieste dell'utente; repository - classi che forniscono accesso a file di testo; archiviazione - tabels in db. Creare un'interfaccia di base per il livello repository: interfaccia GenericRepository <T, ID>; interfaccia DeveloperRepository estende GenericRepository <Developer, Long>; class JdbcDeveloperRepositoryImpl implementa DeveloperRepository. Liquibase viene utilizzato per inizializzare le tabelle nel DB e riempirle. Esistono alcuni endpoint in questa API, ognuno associato a determinati servlet: /api/v1/skills; /api/v1/accounts; /api/v1/developers. C'e una pagina index.jsp, che contiene la descrizione del progetto in tre lingue: inglese, tedesco e italiano. Stack tecnologico: Java, MySQL, JDBC, Servlet, Liquibase, JUnit.